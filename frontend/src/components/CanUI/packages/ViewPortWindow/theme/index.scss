@import "./theme-default";

.disable-animation {
  * {
    transition: none !important;
    animation: none !important;
  }

  .n-modal-mask {
    background-color: transparent;
  }

  .n-modal, .n-card, .n-dropdown-menu, .n-notification, .n-message,
  .n-date-panel, .n-popover {
    box-shadow: none;
    outline: 1px solid $primary;
  }

  .vp-window {
    backdrop-filter: unset !important;
    box-shadow: none !important;
  }
}

.vp-bg {
  background-color: white;
  color: black;
}
._dark {
  .vp-bg {
    background-color: #111;
    color: white;
  }
}

.vp-button-group {
  display: flex;
  flex-wrap: nowrap;
  gap: 0 !important;
  .vp-button {
    &:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }
    &:not(:last-child) {
      border-right: 0;
    }
    &:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
  }
}

.vp-button {
  padding: 6px 8px;
  cursor: pointer;

  &:disabled {
    cursor: not-allowed;
    opacity: .5;
  }
  &.danger {
    color: #f44336;
  }
  &.primary {
    background: $primary !important;
    color: white !important;
  }
}

.vp-input {
  padding: 6px 8px;
  border: 1px solid $color_border;
  scrollbar-width: thin;
  font-family: inherit;

  &:not(&:disabled) {
    &:focus {
      border: 1px solid $primary;
      outline: none;
    }
  }

  &:disabled {
    cursor: not-allowed;
    opacity: .5;
  }
}


/* Vue transitions */
.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.3s ease;
}

.fade-enter-from,
.fade-leave-to {
  opacity: 0;
}


.fade-scale-enter-active,
.fade-scale-leave-active {
  transform: scale(1);
  transition: opacity 0.3s, transform 0.3s;
}

.fade-scale-enter-from,
.fade-scale-leave-to {
  opacity: 0;
  transform: scale(0.92);
  transition: opacity 0.3s, transform 0.3s;
}


.fade-up-enter-active,
.fade-up-leave-active {
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.fade-up-enter-from,
.fade-up-leave-to {
  transform: translateY(20px);
  opacity: 0;
}

.fade-down-enter-active,
.fade-down-leave-active {
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.fade-down-enter-from,
.fade-down-leave-to {
  transform: translateY(-20px);
  opacity: 0;
}

.fade-left-enter-active,
.fade-left-leave-active {
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.fade-left-enter-from,
.fade-left-leave-to {
  transform: translateX(20px);
  opacity: 0;
}

.fade-right-enter-active,
.fade-right-leave-active {
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.fade-right-enter-from,
.fade-right-leave-to {
  transform: translateX(-20px);
  opacity: 0;
}


/* 1. declare transition */
.fadeMove-move,
.fadeMove-enter-active,
.fadeMove-leave-active {
  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);
}

/* 2. declare enter from and leave to state */
.fadeMove-enter-from,
.fadeMove-leave-to {
  opacity: 0;
  transform: scaleY(0.01);
}

/* 3. ensure leaving items are taken out of layout flow so that moving
      animations can be calculated correctly. */
.fadeMove-leave-active {
  position: absolute;
}